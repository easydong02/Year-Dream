{"cells":[{"cell_type":"markdown","metadata":{"id":"asH4-Ll7yF0P"},"source":["## Function이란?\n","\n","**수학적인 의미의 함수와 개념은 비슷하지만 역할이 다르다.**\n","\n","\n","- input이 들어와서 output이 정해진 규칙에 따라 나온다는 개념은 같지만, 프로그램에서의 하나의 함수는 **하나의 기능**을 나타낸다.\n","\n","\n","- 정확하게 함수는 특정 기능을 구현한 **코드 묶음**이다.\n","\n","\n","- def 함수이름(param1, param2, ... ):\n","        <statement1>\n","        <statement2>\n","      return\n","\n","\n","- 함수를 쓰는 이유는 **재사용성** 때문이다."]},{"cell_type":"markdown","metadata":{"id":"sh1ZNG2GyF0P"},"source":["> 함수를 사용하는 가장 중요한 이유는 재사용성 때문이다. Reusability라고 하며, ***똑같은 구조의 코드가 반복되는 것을 피하기 위해 사용***된다. 똑같은 구조의 코드는 보통 한 가지의 기능 단위로 묶이게 되며, 이 기능 단위를 코드로 묶어서 함수로 만든다."]},{"cell_type":"markdown","metadata":{"id":"8fPSbSXzyF0Q"},"source":["## Python Function Definition"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"tB-3gkTGyF0Q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650204689713,"user_tz":-540,"elapsed":284,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"3c7509e9-dea6-4d5a-d1dc-d9b92270d57b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":1}],"source":["def add(a, b):\n","    # 입력받은 a, b를 더한 값을 돌려주는 함수.\n","    result = a+b\n","    return result\n","\n","#Function call\n","add(3,5)"]},{"cell_type":"markdown","metadata":{"id":"gY3l8oWLyF0R"},"source":["- 정확한 용어 구분은 중요하지만, 보통은 parameter라고 총칭한다. 크게 중요하진 않다."]},{"cell_type":"markdown","metadata":{"id":"8yTnxs3ByF0R"},"source":["#### 기억해야 할 것은, input --- (Function) ----> output 의 구조이며, 이 때 어떤 input parameter가 들어가서, 어떤 output parameter가 나오는지 주목해야한다."]},{"cell_type":"markdown","metadata":{"id":"cMW-5h7OyF0R"},"source":["#### 연습삼아, 사칙연산을 모두 함수로 만들어보자."]},{"cell_type":"code","execution_count":7,"metadata":{"id":"BGO2MfZbyF0S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650204969683,"user_tz":-540,"elapsed":3,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"378f2afc-5241-4322-9d50-b5b098011aae"},"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","0\n","0으로 나누지 마세요\n","None\n"]}],"source":["def sub(a,b):\n","    return a-b\n","\n","def mul(a,b):\n","    return a*b\n","\n","def div(a,b):\n","    if b==0:\n","        print(\"0으로 나누지 마세요\")\n","        return\n","    return a/b\n","\n","n1,n2 = 2,0\n","\n","print(sub(n1,n2))\n","\n","print(mul(n1,n2))\n","print(div(n1,n2))"]},{"cell_type":"markdown","metadata":{"id":"e1-9IBVW4k65"},"source":["### 함수 정의의 다양한 형태를 연습해보자!"]},{"cell_type":"markdown","metadata":{"id":"Qz8sWqk94su9"},"source":["#### 1. 가장 흔하게 사용되는 경우 -> 함수 parameter와 return이 모두 존재하는 경우."]},{"cell_type":"code","execution_count":9,"metadata":{"id":"lD9J7z5H4g9C","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1650205075224,"user_tz":-540,"elapsed":5,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"dd15e547-3fd3-476e-cfb0-2c4b73403f2f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Set name as SHIN.\n"]},{"output_type":"execute_result","data":{"text/plain":["'SHIN'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":9}],"source":["def set_name(name):\n","    name = name.upper()\n","    print(f\"Set name as {name}.\")\n","    return name\n","\n","name = set_name(\"Shin\")"]},{"cell_type":"markdown","metadata":{"id":"m9OcUVVw41z_"},"source":["#### 2. 함수 parameter는 없고 return이 존재하는 경우."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iXFA9fXX465J"},"outputs":[],"source":["def save_file():\n","    save_flag =False\n","    with open(\"a.txt\") as f:\n","        f.write(data)\n","        save_flag=True\n","    return save_flag"]},{"cell_type":"markdown","metadata":{"id":"6qJLyvYx46gF"},"source":["#### 3. 함수 parameter는 있는데 return이 없는 경우."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"64MV2yDF4-jA"},"outputs":[],"source":["def save_file(file_path):\n","    save_flag=False\n","    with open(file_path) as f:\n","        f.write(data)\n"]},{"cell_type":"markdown","metadata":{"id":"aaePVAX_4_Ku"},"source":["#### 4. 함수 parameter도 없고 return도 없는 경우."]},{"cell_type":"code","execution_count":10,"metadata":{"id":"vyihU5Zw5CJL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650205266388,"user_tz":-540,"elapsed":4,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"26f74c7e-733e-4ecd-ef32-7f975fe526a7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Hi!\n"]}],"source":["def say_hi():\n","    print(\"Hi!\")\n","\n","say_hi()"]},{"cell_type":"markdown","metadata":{"id":"lqCawSAlyF0S"},"source":["#### Q. 만약에 함수의 입력 parameter의 개수를 모를땐 어떻게 해야할까?"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"yFsI7D5fyF0S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650205741250,"user_tz":-540,"elapsed":367,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"caa91af4-a903-4418-9171-78d13d578bc2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":12}],"source":["def add_many(*args): # *(asterisk)를 앞에 붙이는 것으로 여러개의 parameter를 받아서 tuple로 변환하여 준다.   \n","    total =0\n","    for arg in args:\n","       total +=arg\n","    return total\n","\n","add_many(1,2,3,4)\n","\n","def feed_forward(**kwargs): #kwargs ->dict\n","    pass"]},{"cell_type":"markdown","metadata":{"id":"S9rEciM-yF0T"},"source":["#### Q. 만약에 parameter가 너무 많아서 몇 개만 입력 parameter로 넣고 싶을 땐 어떻게 해야할까?\n","\n","> 아래는 scikit-learn 라이브러리에 있는 logistic regression 모델의 __init__ 함수 코드이다.\n","\n","> parameter가 너무 많아서, 다 외울수도 없다. 이럴 땐 default parameter를 지정해놓고, 필요한 parameter만 입력받는다.\n","\n","\n","-- 이렇게 정의되는 함수의 parameter를 **keyword parameter** 라고 한다."]},{"cell_type":"markdown","metadata":{"id":"ovM9tNK_yF0T"},"source":["![linear_regression](https://drive.google.com/uc?id=1zSGj9LN7ArY19vgtsiiDawfxSQY8uUxD)"]},{"cell_type":"markdown","metadata":{"id":"h7Z72wjwyF0T"},"source":["#### Q. 코드를 작성할 때, 언제 이 부분은 함수로 구현해야겠다 라고 판단할 수 있을까?\n","\n","***A. 똑같은 코드가 2번 이상 반복될 때.***"]},{"cell_type":"markdown","metadata":{"id":"_IreDkFq8Qmm"},"source":["### 파라미터에 대해 조금 더 알아봅시다!\n","\n","- 함수에서 사용되는 변수들에게는 효력 범위와 수명이 있습니다."]},{"cell_type":"markdown","metadata":{"id":"w9x7d_Ka8T13"},"source":["Q. 만약에 함수의 파라미터 변수 이름과, 함수를 호출하는 argument의 이름이 같은 경우에 어떻게 될까?"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"UwgEw1Bd8ljQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650206637351,"user_tz":-540,"elapsed":254,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"8abd5627-ea92-4636-873a-d39494a07a24"},"outputs":[{"output_type":"stream","name":"stdout","text":["1. Kim\n","2. Kim\n","3. Kim\n","4. Lee\n"]}],"source":["# 효력 범위 : scope\n","# 수명 : lifetime\n","\n","#global variable\n","a=10\n","\n","#name = \"Kim\"\n","\n","def change_name(name): #code block(범위)\n","    #local variable\n","    print(f\"2. {name}\")\n","    name = \"Lee\"\n","    # global name =\"Lee\" 이 경우 파라미터로 같은 이름을 쓸 수 없기 때문에 파라미터 이름을 바꿔야 한다.\n","    return name\n","\n","name = \"Kim\"\n","print(f\"1. {name}\")\n","name2 = change_name(name)\n","print(f\"3. {name}\")  #\"Lee\"가 아니고 \"Kim\"!\n","print(f\"4. {name2}\")"]},{"cell_type":"markdown","metadata":{"id":"3Zv4U8eX6TcF"},"source":["### Lambda 함수를 사용해보자!\n","> Lambda Expression\n","\n","\n","- 굉장히 간단한 함수가 있는 경우, 한 줄짜리 함수로 간편하게 사용할 수 있다.\n","\n","- 이런 함수를 Lambda 함수라고 하며, lambda 함수와 반복문을 통해 함수의 정의없이 다양한 프로그래밍이 가능하다."]},{"cell_type":"code","execution_count":16,"metadata":{"id":"FmRItf0AyF0T","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650207443779,"user_tz":-540,"elapsed":291,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"09c5f6c3-3fb9-412d-a520-e7a55b62c097"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":16}],"source":["def add(a, b):\n","    return a+b\n","\n","# lambda 함수로 바꾸면?\n","f = lambda a,b: a+b\n","f(3,5)"]},{"cell_type":"markdown","metadata":{"id":"T0HEotn27r2q"},"source":["Q. 아래 리스트의 원소들을 원소들의 길이에 따라 정렬하고 싶은 경우엔 어떻게 해야할까?"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"6sjA5fGS7Mnt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650207559536,"user_tz":-540,"elapsed":265,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"c31f1a15-8611-4991-8159-b285f29b7c4a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['kim', 'yoon', 'jeong', 'jessica']"]},"metadata":{},"execution_count":18}],"source":["\n","\n","strings = ['yoon', 'kim', 'jessica', 'jeong']\n","\n","strings.sort(key=lambda s : len(s)) #alphatical order -> 글자 길이에 따른 정렬.\n","strings"]},{"cell_type":"markdown","metadata":{"id":"GvCZhie08EHf"},"source":["### 파이썬에 이미 정의되어 있는 함수들을 사용해보자!"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"ET9pXhE98ILc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650207748283,"user_tz":-540,"elapsed":263,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"dc74c0ba-7680-4214-d817-36032ac0cc70"},"outputs":[{"output_type":"stream","name":"stdout","text":["3.14\n","-3\n","-4\n","-0.0015926529164868282\n","-0.9999987317275395\n"]}],"source":["import math\n","# 수학 계산을 해봅시다.\n","number =- 3.14\n","# 절대값, 올림, 내림\n","print(abs(number))\n","print(math.ceil(number))\n","print(math.floor(number))\n","# sin, cos\n","\n","print(math.sin(number))\n","print(math.cos(number))\n"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"81O3IP-v9OK-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650207888101,"user_tz":-540,"elapsed":304,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"cf7d8a2e-4fdb-4a78-d02a-c1d16e8aaceb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[36, 11, 23, 13, 13, 12]"]},"metadata":{},"execution_count":25}],"source":["# 복권 숫자를 만들어봅시다.\n","import random\n","\n","random.randint(1,45)\n","random.choices(list(range(1,46)),k=6) #중복 가능\n"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"OEN5T0gj9T4l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650208020790,"user_tz":-540,"elapsed":4,"user":{"displayName":"DONG HEE SHIN","userId":"03810046734519443823"}},"outputId":"e467edff-3257-4f52-b870-50d122714b6c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["defaultdict(int, {})"]},"metadata":{},"execution_count":30}],"source":["# 다양한 사전들을 써봅시다.\n","import collections\n","from collections import defaultdict\n","\n","D = collections.defaultdict(int) #초기값 0으로\n","D = defaultdict(int) #from 으로 더 자세히 import가능\n","collections.OrderedDict() #입력한 순서를 기억하는 dict   -> 3.9 이상부터 default가 됨."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yFS587GEgqpV"},"outputs":[],"source":[""]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Chapter.01 파이썬 프로그래밍-10. 함수 (실습).ipynb의 사본","provenance":[{"file_id":"15zSDEheIM1IKtVL3WdSjUCr94uouGp2W","timestamp":1650204352517}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"nbformat":4,"nbformat_minor":0}